name: CI with PostgreSQL, Docker Build, and Security Scan

on:
  push:
    branches-ignore:
      - 'main'  # Ignore main branch to avoid duplicate checks on PR merges
  pull_request:
    branches-ignore:
      - 'main'  # Ensure PRs targeting non-main branches are evaluated

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10.12]  # Specify the Python version to use
    services:
      postgres:
        image: postgres:13  # Use PostgreSQL version 13 for consistency with production
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: myappdb
        ports:
          - 5432:5432  # Map PostgreSQL port 5432 on the container to the same port on the host
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5  # Ensure PostgreSQL is ready before proceeding
    steps:
      - uses: actions/checkout@v4  # Check out the repository code

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          mkdir qr_codes
          pip install -r requirements.txt

      - name: Run tests with Pytest
        env:
          DATABASE_URL: postgresql+asyncpg://user:password@localhost:5432/myappdb  # Configure the DATABASE_URL environment variable for tests
        run: pytest  # Execute the test suite using pytest

  build-docker-image:
    needs: test  # Ensure this job runs after the tests have passed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build Docker image (without pushing)
        uses: docker/build-push-action@v5
        with:
          push: true  # This configuration prevents pushing the built image to a registry
          tags: kaw393939/event_manager:${{ github.sha }}  # Customize the tag with your DockerHub username
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Scan the Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'yourusername/devops_demo:${{ github.sha }}'  # Ensure this matches the tag used during build
          format: 'table'
          exit-code: '1'  # Fail the job if vulnerabilities are found
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'
